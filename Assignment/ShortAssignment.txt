/*短作业优先算法
 * 方法：
 * 1.getIndex：一个继承得方法，得到新添加节点的应该插入位置
 * 2.setMember：一个继承的方法，设置当前的等待队列。
 * 
 */
public class ShortAssignment extends AbstractSort {
	public int getIndex(JCB tem,TimeOfJCB now) {
		int TimeOne;
		int TimeTwo;
		int TimeThree;
		int index = 0;
		TimeOne = tem.getRunningTime();
		while(true) {
			if(member.size()==0)                                     //队列中没有节点
				return 0;
			else {
				TimeTwo = member.get(index).getRunningTime();
				if(TimeTwo<TimeOne) {
					if(index+1==member.size())                      //队列中最后一个节点小于当前节点
						return index+1;
					else {                                          
						TimeThree = member.get(index+1).getRunningTime();   
						if(TimeThree>TimeOne)               //下一个节点大于当前节点
							return index+1;
						else index++;                                  //否则继续比较
					}
				}
				else {
					return index;
				}
			}
		}
	}
	public void setMember(queue tem) {
		member = tem.getWaitingQueue();
	}

}
